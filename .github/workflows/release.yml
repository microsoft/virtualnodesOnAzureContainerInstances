name: Release Charts

on:
  push:
    branches:
      - main

jobs:
  release:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Install GitHub CLI
        run: sudo apt-get install gh -y

      - name: Generate Random Branch Name
        id: vars
        run: echo "BRANCH=gh-pages-temp-$(uuidgen | cut -d'-' -f1)" >> $GITHUB_ENV

      - name: Update or Create Branch
        run: |
          git fetch origin
          if git ls-remote --exit-code --heads origin $BRANCH; then
            git checkout $BRANCH
            git merge origin/main --no-edit
          else
            git checkout origin/main -b $BRANCH
          fi
          git push origin $BRANCH

      - name: Install Helm
        uses: azure/setup-helm@v4
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        with:
          charts_dir: Helm
          pages_branch: ${{ env.BRANCH }}
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Create Pull Request and Enable Delete Branch
        run: |
          gh auth setup-git
          PR_URL=$(gh pr create \
            --head $BRANCH \
            --base main \
            --title "Helm Chart Release" \
            --body "This PR contains the latest Helm chart release artifacts." \
            --json url -q .url)

          PR_NUMBER=$(echo $PR_URL | awk -F'/' '{print $NF}')
          REPO=$(echo $PR_URL | awk -F'/' '{print $(NF-2)"/"$(NF-1)}')

          curl -X PATCH \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/$REPO/pulls/$PR_NUMBER \
            -d '{"maintainer_can_modify":true}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
