apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "virtualnode2.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "virtualnode2.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "virtualnode2.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        "kubernetes.azure.com/no-http-proxy-vars": "true"
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "virtualnode2.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.images.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 0
      serviceAccountName: {{ if .Values.rbac.install }} "{{ template "virtualnode2.fullname" . }}-{{ .Values.rbac.serviceAccountName }}" {{ end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-config
          image: {{ .Values.images.initImage }}
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          env:
            - name: serviceaccountname
              value: "{{ template "virtualnode2.fullname" . }}-{{ .Values.rbac.serviceAccountName }}"
            - name: NodeName
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - mountPath: /kubeconfig/
              name: kube-config-volume
          args: ["/initcontainer/init.sh"]
      containers:
        - name: kubelet
          resources:
            requests:
              cpu: 1
              memory: 4G
            limits:
              cpu: 3
              memory: 12G
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: true
          image: {{ .Values.images.kubeletImage }}
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          volumeMounts:
            - mountPath: /var/lib/kubelet/
              name: kubelet-root-dir
              mountPropagation: Bidirectional
            - mountPath: /image-credential-provider/credential-provider-config.yaml
              name: aks-credential-provider-yaml
            - mountPath: /image-credential-provider/credential-provider
              name: aks-credential-provider-binary
            - mountPath: /tmp/
              name: socket-volume
            - mountPath: /kubeconfig/
              name: kube-config-volume
            - mountPath: /etc/kubernetes/azure.json
              name: aks-credential
            - mountPath: /etc/ssl/certs/ca-certificates.crt
              name: ca-certificates
            - mountPath: /var/log/pods
              name: container-logs
          env:
            - name: NodeIP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NodeName
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: PodNS
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CustomNodeLabels
              value: {{ .Values.nodeLabels }}
          resources: {}
        - name: virtualcsi
          resources:
            requests:
              cpu: 0
              memory: 0G
            limits:
              cpu: 3
              memory: 12G
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: true
          image: {{ .Values.images.virtualcsiImage }}
          command:
            - /go/bin/virtual-csi
          args:
            - >-
              -endpoint=unix:///var/lib/kubelet/plugins/file.csi.azure.com/csi.sock
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          volumeMounts:
            - name: kubelet-root-dir
              mountPath: /var/lib/kubelet
        - name: crisocketotcpadapter
          resources:
            requests:
              cpu: 0
              memory: 0G
            limits:
              cpu: 3
              memory: 12G
          image: {{ .Values.images.crisockettotcpadapterImage }}
          env:
            - name: ListenEndpoint
              value: /tmp/vcri.sock
          volumeMounts:
            - name: socket-volume
              mountPath: /tmp/
            - name: aks-credential
              mountPath: /etc/aks/azure.json
            - name: kubelet-root-dir
              mountPath: /kubelet/
            - name: container-logs
              mountPath: /var/log/pods
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: {{ .Values.images.pullPolicy }}
        - name: spdycompat
          resources:
            requests:
              cpu: 0
              memory: 0G
            limits:
              cpu: 3
              memory: 12G
          image: {{ .Values.images.spdycompatImage }}
          imagePullPolicy: {{ .Values.images.pullPolicy }}
        - name: proxycri
          resources:
            requests:
              cpu: 2
              memory: 8G
            limits:
              cpu: 3
              memory: 12G
          image: {{ .Values.images.proxycriImage }}
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
            privileged: true
          volumeMounts:
            - name: socket-volume
              mountPath: /tmp/
            - name: aks-credential
              mountPath: /etc/aks/azure.json
            - name: kubelet-root-dir
              mountPath: /var/lib/kubelet/
              mountPropagation: Bidirectional
            - name: container-logs
              mountPath: /var/log/pods
            - mountPath: /kubeconfig/
              name: kube-config-volume   
          env:
            - name: VirtualNode_SandboxProvider_StandbyPools_Cpu
              value: {{ quote .Values.standbyPool.standbyPoolsCpu }}
            - name: VirtualNode_SandboxProvider_StandbyPools_Memory
              value: {{ quote .Values.standbyPool.standbyPoolsMemory }}
            - name: VirtualNode_SandboxProvider_StandbyPools_MaxReadyCapacity
              value: {{ quote .Values.standbyPool.maxReadyCapacity }}
            - name: VirtualNode_SandboxProvider_StandbyPools_CcePolicy
              value: {{ .Values.standbyPool.ccePolicy }}
            - name: VirtualNode_SandboxProvider_StandbyPools_Zones
              value: {{ quote .Values.standbyPool.zones }}
            - name: SandboxProviderType
              value: {{ .Values.sandboxProviderType }}
            - name: VirtualNode_Zones
              value: {{ quote .Values.zones }}
            - name: Subnets
              value: {{ .Values.aciSubnetName }}
            - name: AKS_CREDENTIAL_LOCATION
              value: /etc/aks/azure.json
            - name: ListenEndpoint
              value: /tmp/vcri2.sock
            - name: Subnet
              value: {{ .Values.aciSubnetName }}
            - name: MountHostImage
              value: {{ .Values.images.mountImage }}
            - name: ResourceGroup
              value: {{ .Values.aciResourceGroupName }}
            - name: NodeName
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
        - name: node-driver-registrar
          resources:
            requests:
              cpu: 0
              memory: 0G
            limits:
              cpu: 3
              memory: 12G
          image: {{ .Values.images.noddriverregistrarImage }}
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          volumeMounts:
            - name: kubelet-root-dir
              mountPath: /var/lib/kubelet/
            - name: kubelet-root-dir
              mountPath: /registration
              subPath: plugins_registry
          args: 
            - "--csi-address=$(ADDRESS)"
            - "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)"
            - "--v=2"
          env:
            - name: ADDRESS
              value: "/var/lib/kubelet/plugins/file.csi.azure.com/csi.sock"
            - name: DRIVER_REG_SOCK_PATH
              value: "/var/lib/kubelet/plugins/file.csi.azure.com/csi.sock"              
      volumes:
        - name: kubelet-root-dir
          emptyDir:
            medium: Memory
        - name: socket-volume
          emptyDir: {}
        - name: kube-config-volume
          emptyDir: {}
        - name: container-logs
          emptyDir: {}
        - name: ca-certificates
          hostPath:
            path: /etc/ssl/certs/ca-certificates.crt
            type: File
        - name: aks-credential
          hostPath:
            path: /etc/kubernetes/azure.json
            type: File
        - name: aks-credential-provider-yaml
          hostPath:
            path: /var/lib/kubelet/credential-provider-config.yaml
            type: FileOrCreate
        - name: aks-credential-provider-binary
          hostPath:
            path: /var/lib/kubelet/credential-provider
            type: DirectoryOrCreate         
        - name: credentials
          secret:
            secretName: virtual-node-admission-controller
            defaultMode: 420
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  podManagementPolicy: "Parallel"